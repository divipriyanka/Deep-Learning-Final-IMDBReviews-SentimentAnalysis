# -*- coding: utf-8 -*-
"""App.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u1Dkuku84D4CDZcgnJy3lYt8zL039Ek1
"""

import streamlit as st
import tensorflow as tf
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing.sequence import pad_sequences
import json
import numpy as np

model = load_model('GRU.h5') # Loading the pretrained GRU model

with open('tokenizer.json') as f:
    tokenizer_json = f.read()  # Read as string
    tokenizer = tf.keras.preprocessing.text.tokenizer_from_json(tokenizer_json)


MAX_SEQUENCE_LENGTH = 20

# def preprocess_text(review):
#     # Convert the text to a sequence
#     sequence = tokenizer.texts_to_sequences([review])
#     # Pad the sequence
#     padded_sequence = pad_sequences(sequence, maxlen=MAX_SEQUENCE_LENGTH, padding='post', truncating='post')
#     return padded_sequence

# def predict_sentiment(text):
#     # Preprocess the text
#     processed_text = preprocess_text(text)
#     # Make a prediction
#     prediction = model.predict(processed_text)
#     sentiment = ['Positive', 'Negative', 'Neutral']
#     return sentiment[np.argmax(prediction)]

def predict_sentiment(review):
  # tokenize and pad the review
  sequence = tokenizer.texts_to_sequences([review])
  padded_sequence = pad_sequences(sequence, maxlen=200)
  prediction = model.predict(padded_sequence)
  sentiment = "positive" if prediction[0][0] > 0.5 else "negative"
  return sentiment

st.title('Sentiment Analysis App')

user_input = st.text_area("Enter the text you'd like to analyze for sentiment:")

if st.button('Analyze'):
    sentiment = predict_sentiment(user_input)
    st.write(print(f"The sentiment of the review is: {sentiment}"))